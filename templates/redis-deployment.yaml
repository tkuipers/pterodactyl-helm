{{- if .Values.redis.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "pterodactyl.redis.name" . }}
  namespace: {{ .Values.namespace | default "pterodactyl" }}
  labels:
    {{- include "pterodactyl.labels" . | nindent 4 }}
    app.kubernetes.io/component: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "pterodactyl.redis.selectorLabels" . | nindent 6 }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        {{- include "pterodactyl.redis.selectorLabels" . | nindent 8 }}
    spec:
      securityContext:
        runAsUser: 0
        runAsGroup: 0
        fsGroup: 0
      volumes:
        - name: redis-data
          {{- if .Values.redis.persistence.enabled }}
          {{- if .Values.redis.persistence.hostPath }}
          hostPath:
            path: {{ .Values.redis.persistence.hostPath }}
            type: DirectoryOrCreate
          {{- else }}
          persistentVolumeClaim:
            claimName: {{ include "pterodactyl.redis.name" . }}
          {{- end }}
          {{- else }}
          emptyDir: {}
          {{- end }}
      containers:
        - name: {{ .Chart.Name }}-redis
          image: "{{ .Values.redis.image.repository }}:{{ .Values.redis.image.tag }}"
          imagePullPolicy: {{ .Values.redis.image.pullPolicy }}
          securityContext:
            runAsUser: 0
            runAsGroup: 0
          ports:
            - name: redis
              containerPort: 6379
              protocol: TCP
          volumeMounts:
            - name: redis-data
              mountPath: /data
          resources:
            {{- toYaml .Values.redis.resources | nindent 12 }}
{{- end }} 